// <auto-generated />
using System;
using DataBaseSetupV3.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBaseSetupV3.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250414015306_InitializeDatabase")]
    partial class InitializeDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBaseSetupV3.Model.ApproveFlow", b =>
                {
                    b.Property<string>("ApproveFlowId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ApprovalSequence")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalUserIds")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("AprovedByDeptSupervisor")
                        .HasColumnType("bit")
                        .HasComment("如果只局限於部門審批,則不指定審批用戶ID,或者作為備審人員 來源 Department.UserId");

                    b.Property<TimeSpan>("CoolingOffBefore")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartupDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("多用戶審批流程---啟動日期[Startup Datetime]: 把之前單用戶審批分開處理的時間起點。");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableColumn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDatetime")
                        .HasColumnType("datetime");

                    b.HasKey("ApproveFlowId");

                    b.ToTable("ApproveFlow");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.ApproveFlowLog", b =>
                {
                    b.Property<string>("ApproveFlowLogId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ApprovalSequence")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalUserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApprovalUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApproveFlowId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ApprovedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsUndo")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryxKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SourceRowHash")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableColumn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TargetResult")
                        .HasColumnType("int")
                        .HasComment("ApproveFlowLog.Status  判斷上一個節點 ApproveFlowLog.TargetResult是否和下一個節點的ApproveFlowLog.TargetResult 是否一致. ");

                    b.Property<DateTime?>("UndoTime")
                        .HasColumnType("datetime");

                    b.HasKey("ApproveFlowLogId");

                    b.ToTable("ApproveFlowLog");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IndustryId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttendanceByCom", b =>
                {
                    b.Property<string>("AttendanceByComId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CalcPeriodType")
                        .HasColumnType("int");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("SysCalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TotalAbsentDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalActualNetWorkDay")
                        .HasColumnType("int");

                    b.Property<int>("TotalEmployeesInAttendance")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfAttendance")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfBreak")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfEarlyOut")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfLateIn")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfMissing")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfOverTime")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularWorkOff")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularWorkOn")
                        .HasColumnType("int");

                    b.HasKey("AttendanceByComId");

                    b.ToTable("AttendanceByCom");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttendanceByDay", b =>
                {
                    b.Property<string>("AttendanceByDayId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CalcPeriodType")
                        .HasColumnType("int");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DayEarlyOutTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("DayIsEarlyTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayIsLateTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayLateInTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("DayLunchEarlyOutTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("DayLunchIsEarlyTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayLunchIsLateTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayLunchLateInTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingLunchEndTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingLunchStartTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingOverTimeEndTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingOverTimeStartTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingWorkOffTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayMissingWorkOnTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayOverTimeEarlyOutTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("DayOverTimeIsEarlyTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayOverTimeIsLateTimez")
                        .HasColumnType("int");

                    b.Property<int>("DayOverTimeLateInTimeSpan")
                        .HasColumnType("int");

                    b.Property<string>("DayShiftListJson")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DayShiftNameList")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("DayTotalLunchTimeSpan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("('00:00:00.0000000')");

                    b.Property<TimeSpan>("DayTotalOverTimeSpan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("('00:00:00.0000000')");

                    b.Property<TimeSpan>("DayTotalWorkNetTimeSpan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("('00:00:00.0000000')");

                    b.Property<TimeSpan>("DayTotalWorkTimeSpan")
                        .HasColumnType("time");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HmacHash")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("HolidayId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HolidayName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("HolidayPaidType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("HolidayPaidTypeName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("HolidayWithPaidRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsAbsentDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkDay")
                        .HasColumnType("bit");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeaveId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LeavePaidType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("LeavePaidTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<string>("LeaveTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("LeaveWithPaidRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("OccurDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("OnDutyPaidRatioAvg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("OnDutyWorkRatioAvg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SysCalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TotalTimesOfRegularLunchEnd")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularLunchStart")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularOverTimeEnd")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularOverTimeStart")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularWorkOff")
                        .HasColumnType("int");

                    b.Property<int>("TotalTimesOfRegularWorkOn")
                        .HasColumnType("int");

                    b.HasKey("AttendanceByDayId");

                    b.ToTable("AttendanceByDay");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttendanceByPeriod", b =>
                {
                    b.Property<string>("AttendanceByPeriodId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("AccuAbsentDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("AccuEarlyLunchOutTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AccuEarlyOutTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AccuEarlyOverTimeOutTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AccuHolidays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("AccuLateInTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AccuLeaveDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("AccuLunchLateInTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AccuLunchTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AccuOverTimeLateInTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AccuOverTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<int>("AccuTimesOfEarlyOut")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfLateIn")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfLunchEarlyOut")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfLunchLateIn")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissing")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingLunchEnd")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingLunchStart")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingOverTimeEnd")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingOverTimeStart")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingWorkOff")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfMissingWorkOn")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfOverTimeEarlyOut")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfOverTimeLateIn")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegular")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularLunchEnd")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularLunchStart")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularOverTimeEnd")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularOverTimeStart")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularWorkOff")
                        .HasColumnType("int");

                    b.Property<int>("AccuTimesOfRegularWorkOn")
                        .HasColumnType("int");

                    b.Property<long>("AccuWorkActualNetTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AccuWorkDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("AccuWorkTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AvgAttWeightedRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValueSql("((1))")
                        .HasComment("加權平均考勤率：加權平均法計算出這個時期的平均加權考勤率");

                    b.Property<long>("AvgLunchTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AvgOnDutyPaidRatio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("AvgOnDutyWorkRatio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("AvgOverTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AvgWorkActualNetTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<long>("AvgWorkTimeSpan")
                        .HasColumnType("bigint");

                    b.Property<int>("CalcPeriodType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("HmacHash")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Mode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("ObjectData")
                        .HasColumnType("ntext");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("OverAllCompletedRatio")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("總體完成率 是指實際確切的工作時間減去應工作的排班時間 如週期(月度)結束,合理情況是100%");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PresetWorkTimeSpan")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ShiftNameStructure")
                        .HasColumnType("ntext");

                    b.Property<string>("SiteId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("SysCalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("AttendanceByPeriodId");

                    b.ToTable("AttendanceByPeriod");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttendanceByShift", b =>
                {
                    b.Property<string>("AttendanceByShiftId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("BreakTimeTotalSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BreakTimes")
                        .HasColumnType("int");

                    b.Property<int>("CalcPeriodType")
                        .HasColumnType("int");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EarlyOut")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HmacHash")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("HolidayId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("HolidayPaidType")
                        .HasColumnType("int");

                    b.Property<string>("HolidayPaidTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsAbsentDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutoCalcMissing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("IsEarly")
                        .HasColumnType("int");

                    b.Property<int>("IsLate")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegularLunchEnd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegularLunchStart")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegularOverTimeEnd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegularOverTimeStart")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegularWorkOff")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegularWorkOn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkDay")
                        .HasColumnType("bit");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LateIn")
                        .HasColumnType("int");

                    b.Property<string>("LeaveId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LeavePaidType")
                        .HasColumnType("int");

                    b.Property<string>("LeavePaidTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<string>("LeaveTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("LunchTimeEarlyOut")
                        .HasColumnType("int");

                    b.Property<DateTime>("LunchTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<int>("LunchTimeIsEarly")
                        .HasColumnType("int");

                    b.Property<int>("LunchTimeIsLate")
                        .HasColumnType("int");

                    b.Property<int>("LunchTimeLateIn")
                        .HasColumnType("int");

                    b.Property<decimal>("LunchTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LunchTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("MissingLunchEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("MissingLunchStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("MissingOverTimeEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("MissingOverTimeStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("MissingWorkOff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("MissingWorkOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("ObjData")
                        .HasColumnType("ntext");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("OnDutyPaidRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("OnDutyWorkRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("OverTimeEarlyOut")
                        .HasColumnType("int");

                    b.Property<DateTime>("OverTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<int>("OverTimeIsEarly")
                        .HasColumnType("int");

                    b.Property<int>("OverTimeIsLate")
                        .HasColumnType("int");

                    b.Property<int>("OverTimeLateIn")
                        .HasColumnType("int");

                    b.Property<decimal>("OverTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OverTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ScheduleDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShiftAbbrId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ShiftId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ShiftName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SysCalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("WorkActualNetTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WorkEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("datetime");

                    b.Property<decimal>("WorkTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AttendanceByShiftId");

                    b.ToTable("AttendanceByShift");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttendanceLog", b =>
                {
                    b.Property<long>("AttendanceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("AccesscardId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CatchPicture")
                        .HasColumnType("text");

                    b.Property<string>("CatchPictureFileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CnName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CratedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("DeviceEntryMode")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FacialArea")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FacialAvatar")
                        .HasColumnType("text");

                    b.Property<string>("HmacHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LatitudeAndLongitude")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Mode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("ObjData")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("OccurDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("AttendanceLogId");

                    b.ToTable("AttendanceLog");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttLog", b =>
                {
                    b.Property<long>("AttendanceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("AccesscardId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CatchPicture")
                        .HasColumnType("text");

                    b.Property<string>("CatchPictureFileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CnName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CratedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("DeviceEntryMode")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FacialArea")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FacialAvatar")
                        .HasColumnType("text");

                    b.Property<string>("HmacHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LatitudeAndLongitude")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Mode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("ObjData")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("OccurDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("AttendanceLogId");

                    b.ToTable("AttLog");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttPolicy", b =>
                {
                    b.Property<string>("AttPolicyId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("AttPolicyConfigCalcMode")
                        .HasColumnType("int");

                    b.Property<string>("AttPolicyLabelName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OperatedUser")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PolicyConfig")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RuleDescription")
                        .HasColumnType("ntext");

                    b.Property<int>("SettlePeriodMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("AttPolicyId");

                    b.ToTable("AttPolicy");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttPolicyCalc", b =>
                {
                    b.Property<string>("AttPolicyCalcId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasComment("改用 對應 常量ShiftBusiness.ApprovedMode 但column name 保留不變, 2025-3-1, 功能:審批 拒絕 取消等狀態");

                    b.Property<int>("AccountingComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("OPEN=1");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ApprovedStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("GeneralStatus 改為 ApprovedStatus 常量值是 ShiftBusiness.ApprovedMode");

                    b.Property<DateTime>("CalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ComfirmeddBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateTimeForRpt")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DrorCr")
                        .HasColumnType("int")
                        .HasColumnName("DRorCR");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PolicyConfigLog")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.HasKey("AttPolicyCalcId");

                    b.ToTable("AttPolicyCalc");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AttPolicyOfEply", b =>
                {
                    b.Property<string>("AttPolicyOfEplyId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("AttPolicyId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("AttPolicyLabelName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PolicyConfig")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("SettlePeriodMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("AttPolicyOfEplyId");

                    b.ToTable("AttPolicyOfEply");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.CardManage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MapToUserDeviceSerialNo")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("OccupiedByEmployeeId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("OccupiedByEmployeeName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhysicalId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("0 = not ; 2 = applicable ; 2 =  active inactive");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("CardManage");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Contractor", b =>
                {
                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ServiceStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserIds")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ContractorId");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.DefinitedPeriod", b =>
                {
                    b.Property<string>("DefinitedPeriodId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DefinitedPeriodName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("OperatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("PeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodStartDate")
                        .HasColumnType("date");

                    b.HasKey("DefinitedPeriodId");

                    b.ToTable("DefinitedPeriod");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Department", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepartmentAbbrName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EnDepartmentName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("IndustryId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MainComId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ParantsDeptId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentsDeptName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserIds")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Device", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceEntryMode")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceSerialNo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("HangDownDevices")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasComment("DEV  JSON LIST 設備載體平台的 下掛設備 utf-8 編碼文字");

                    b.Property<bool?>("IsReverseHex")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OperatedUser")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("0 = not ; 2 = applicable ; 2 =  active inactive");

                    b.Property<string>("SysModuleId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("DeviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.DeviceUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccessCardId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("CreatedIsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DevidceUserProfileId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("DownDelStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<DateTime>("DownDelStatusDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DownInsertStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<DateTime>("DownInsertStatusDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DownUpdateStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<DateTime>("DownUpdateStatusDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmployName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FingerPrints")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("GeneralStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PassKey")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SearchMode")
                        .HasColumnType("int");

                    b.Property<string>("SynchronizedStatusRemarks")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("UserIconIsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserIconPositive")
                        .HasColumnType("text");

                    b.Property<bool>("UserIconPositiveIsUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("UserIconSide")
                        .HasColumnType("text");

                    b.Property<bool>("UserIconSideIsUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("UserIconTopView")
                        .HasColumnType("text");

                    b.Property<bool>("UserIconTopViewIsUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("DeviceUser");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AccessCardId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("CnName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FingerPrint")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("JobName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MainComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SiteId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("The3rdPartyEmployeeId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserIcon")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.EplyFinance", b =>
                {
                    b.Property<string>("EplyFinanceId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("AccountingStatus")
                        .HasColumnType("int")
                        .HasComment("会计状态");

                    b.Property<string>("BankBusiness")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeFunllName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("settle  account");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransBankingId")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TransBankingName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TransferNo")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("EplyFinanceId");

                    b.HasIndex("EplyFinanceId")
                        .IsUnique()
                        .HasDatabaseName("IX_EplyFinanceId");

                    b.ToTable("EplyFinance");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.EplyFinanceItem", b =>
                {
                    b.Property<string>("EplyFinanceItemId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength()
                        .HasComment("會計記賬代碼 Accounting Code");

                    b.Property<string>("AccountingDocuments")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasDefaultValueSql("(N'上存會計文件保存 文件名分號隔開的數組字符串')");

                    b.Property<int>("AccountingStatus")
                        .HasColumnType("int")
                        .HasComment("会计状态");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DrorCr")
                        .HasColumnType("int")
                        .HasColumnName("DRorCR")
                        .HasComment("借或者贷");

                    b.Property<string>("EmployeeFunllName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("EplyFinanceId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("IsClosed")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Item Name : BusFee  LunchFee");

                    b.Property<string>("ItemNameId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasComment(" = EplyFinanceItemNameId");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OccuredDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OperateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)")
                        .HasComment("系統使用的 json數據結果");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.Property<string>("SubmitUser")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("提交申請者(USER)");

                    b.Property<string>("Summary")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<DateTime?>("UpDatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("EplyFinanceItemId");

                    b.ToTable("EplyFinanceItem");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.EplyFinanceItemName", b =>
                {
                    b.Property<string>("EplyFinanceItemNameId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("會計記賬代碼 Accounting Code");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EplyFinanceItemNameId");

                    b.ToTable("EplyFinanceItemName");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.EventLog", b =>
                {
                    b.Property<string>("EventLogId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("EventDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MessageIfException")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("OperateDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OperateLogContent")
                        .HasColumnType("ntext");

                    b.Property<string>("OperateUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasDefaultValueSql("(N'SYSTEM')");

                    b.HasKey("EventLogId");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Holiday", b =>
                {
                    b.Property<string>("HolidayId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HolidayCnName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("date");

                    b.Property<string>("HolidayEnName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("HolidayPaidType")
                        .HasColumnType("int");

                    b.Property<string>("HolidayPaidTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsWholeDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("OnDutyPaidRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("StatutoryHoliday")
                        .HasColumnType("bit");

                    b.HasKey("HolidayId");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Industry", b =>
                {
                    b.Property<string>("IndustryId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EnIndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentsIndustryId")
                        .HasColumnType("int");

                    b.HasKey("IndustryId");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.InfoCate", b =>
                {
                    b.Property<string>("InfoCateId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("InfoCateID");

                    b.Property<string>("InfoCateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Levels")
                        .HasColumnType("int");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PrarentsId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PrarentsID");

                    b.HasKey("InfoCateId");

                    b.ToTable("InfoCate");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.InfoDetail", b =>
                {
                    b.Property<string>("InfoId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Author")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InfoCateId")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("InfoDescription")
                        .HasColumnType("ntext");

                    b.Property<string>("InfoItemTemplateIds")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsOriginal")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SeoKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("ShowTitleThumbNail")
                        .HasColumnType("bit");

                    b.Property<string>("StaffId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TitleThumbNail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserTraceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("InfoId")
                        .HasName("PK_dbo.InfoDetail");

                    b.ToTable("InfoDetail");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Job", b =>
                {
                    b.Property<string>("JobId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EnJobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((190605))");

                    b.Property<string>("The3rdJobId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Language", b =>
                {
                    b.Property<string>("KeyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnUs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("en_US");

                    b.Property<string>("IndustryIdArr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainComIdArr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zh_CN");

                    b.Property<string>("ZhHk")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zh_HK");

                    b.HasKey("KeyName");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Leave", b =>
                {
                    b.Property<string>("LeaveId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApplovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("審批的日期時間");

                    b.Property<string>("ApprovedRemarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LeaveEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LeavePaidType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveStartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<string>("MainComId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("OperatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ScheduleId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasComment("allow the array or  Single");

                    b.Property<double>("TotalDaySpan")
                        .HasColumnType("float");

                    b.HasKey("LeaveId");

                    b.ToTable("Leave");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.LeaveTypeDay", b =>
                {
                    b.Property<string>("LeaveType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("MainComId 和 LeaveType 确定唯一的记录，例如定义 公司6000014的年假10天");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsForTotal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否允許與其他累計 如果統計總的請假天數則視乎此值");

                    b.Property<string>("LeaveTypeDayId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("Auto-increment ID 使用 函数 DataBaseContext.GetTableIdentityID");

                    b.Property<string>("LeaveTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("MaxLeaveDaySpan")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasComment("累計的時長：年假10天，標準工作時間8小時，則對應的值等於80小時 ");

                    b.Property<decimal>("MaxLeaveNatureWorkDay")
                        .HasColumnType("decimal(4,2)")
                        .HasComment("如 3-8婦女節 半天假期 = 0.5 個工作日 換算成 MaxLeaveDaySpan =  0.5*GlobalConfig.StandardWorkDaySpan(8小時) 即4小時 ");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("LeaveType", "MainComId");

                    b.ToTable("LeaveTypeDay");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.MainCom", b =>
                {
                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CicReferenceNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CIC_ReferenceNo");

                    b.Property<string>("CompanyAbbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("IndustryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,7)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,7)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ServiceStartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ServiceStatus")
                        .HasColumnType("int");

                    b.HasKey("MainComId");

                    b.ToTable("MainCom");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.MenuItem", b =>
                {
                    b.Property<string>("MenuItemId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EngMenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentsMenuItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuItemId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Position", b =>
                {
                    b.Property<string>("PositionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EnPositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParentsNodeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("default value = 0 (IsParentsNode)");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SalaryAndFinanceSecurity", b =>
                {
                    b.Property<string>("SalaryAndFinanceSecurityId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("HamcResult")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("TargetPrimaryKey")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TargetTableName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("UpdatedDatetime")
                        .HasColumnType("datetime");

                    b.HasKey("SalaryAndFinanceSecurityId");

                    b.ToTable("SalaryAndFinanceSecurity");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SalaryDeduction", b =>
                {
                    b.Property<string>("SalaryDeductionId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("AccountingComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("OPEN=1");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ApprovedStatus")
                        .HasColumnType("int");

                    b.Property<string>("AttendanceByPeriodId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("AvgOnDutyPaidRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AvgOnDutyWorkRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ContractorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContractorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DrorCr")
                        .HasColumnType("int")
                        .HasColumnName("DRorCR");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("GeneralStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("GeneralStatus (ACTIVE=1;INACTIVE = 0) ");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("OverAllCompletedRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalaryAssessmentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("SalaryDeductionId");

                    b.ToTable("SalaryDeduction");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SalAssessment", b =>
                {
                    b.Property<string>("SalAssessmentId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ApprovedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeFunllName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FormulaOfAssessment")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OperateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("SalaryAssessmentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.HasKey("SalAssessmentId");

                    b.ToTable("SalAssessment");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SalTaxRate", b =>
                {
                    b.Property<string>("SalTaxRateId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ApprovedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Quota")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("priority to use Ratio , if Ratio is zero then use the Quota.");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SettlePeriodMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<decimal>("SocialInsuranceRatio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalTaxRateId");

                    b.ToTable("SalTaxRate");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SalWelfareCalc", b =>
                {
                    b.Property<string>("SalWelfareCalcId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ApprovedStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CalcBusinessDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrorCr")
                        .HasColumnType("int")
                        .HasColumnName("DRorCR");

                    b.Property<string>("EmployeeFunllName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EplyFinanceItemNameId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SettlePeriodMode")
                        .HasColumnType("int");

                    b.HasKey("SalWelfareCalcId");

                    b.ToTable("SalWelfareCalc");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Schedule", b =>
                {
                    b.Property<string>("ScheduleId")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("IdOfMonthlyShiftEmploy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ScheduleDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShiftAbbrId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ShiftAssignedMode")
                        .HasColumnType("int");

                    b.Property<string>("ShiftId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("SysCalcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeSpan>("WorkEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("WorkStart")
                        .HasColumnType("time");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Shift", b =>
                {
                    b.Property<string>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("((6))");

                    b.Property<DateTime>("AppliedEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("AppliedStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BreakTimeAllowance")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("BreakTimeCalcEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("BreakTimeCalcStart")
                        .HasColumnType("time");

                    b.Property<int>("BreakTimeSpan")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentIdArr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExcludeOverTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcludeWeekDay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FC0366')");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutoCalcMissing")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("LunchTimeEnd")
                        .HasColumnType("time");

                    b.Property<int>("LunchTimeEndBuffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((30))");

                    b.Property<decimal>("LunchTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("LunchTimeStart")
                        .HasColumnType("time");

                    b.Property<int>("LunchTimeStartBuffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((30))");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MissingLunchEnd")
                        .HasColumnType("int");

                    b.Property<int>("MissingLunchStart")
                        .HasColumnType("int");

                    b.Property<int>("MissingOverTimeEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MissingOverTimeStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MissingWorkOff")
                        .HasColumnType("int");

                    b.Property<int>("MissingWorkOn")
                        .HasColumnType("int");

                    b.Property<string>("OperatedUserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<TimeSpan>("OverTimeEnd")
                        .HasColumnType("time");

                    b.Property<int>("OverTimeEndBuffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<decimal>("OverTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("OverTimeStart")
                        .HasColumnType("time");

                    b.Property<int>("OverTimeStartBuffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<string>("RuleDescription")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ShiftAbbrId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ShiftAppliedMode")
                        .HasColumnType("int");

                    b.Property<int>("ShiftBusinessMode")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SpecialWeekDays")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("SpecialWeekDaysWorkEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeSpan>("SpecialWeekDaysWorkStart")
                        .HasColumnType("time");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("WorkEnd")
                        .HasColumnType("time");

                    b.Property<int>("WorkEndAllowance")
                        .HasColumnType("int");

                    b.Property<int>("WorkEndBuffer")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("WorkStart")
                        .HasColumnType("time");

                    b.Property<int>("WorkStartAllowance")
                        .HasColumnType("int");

                    b.Property<int>("WorkStartBuffer")
                        .HasColumnType("int");

                    b.Property<decimal>("WorkTimeSpan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShiftId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Site", b =>
                {
                    b.Property<string>("SiteId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteAddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SiteId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SourceStatistic", b =>
                {
                    b.Property<int>("SourceStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceStatisticsId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("IP");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LoadTime")
                        .HasColumnType("int")
                        .HasColumnName("loadTime");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OpenId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Osversion")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("OSVersion");

                    b.Property<string>("RecommUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SourceArea")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SourceUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableKeyId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VisitorIcon")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WxNickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SourceStatisticsId")
                        .HasName("PK_dbo.SourceStatistic");

                    b.ToTable("SourceStatistic");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.Staff", b =>
                {
                    b.Property<string>("StaffId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ChannelId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ChannelID");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IconPortrait")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Introduction")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OtherChannelName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OtherQrcode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PublicNo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Qrcode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("StaffName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.SysModule", b =>
                {
                    b.Property<string>("KeyId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Config")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FuncDesc")
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<int>("GeneralStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SysModuleId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SysModuleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SysModuleType")
                        .HasColumnType("int");

                    b.HasKey("KeyId");

                    b.ToTable("SysModule");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.TableIdentity", b =>
                {
                    b.Property<string>("TableName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TableIdentityId")
                        .HasColumnType("int");

                    b.HasKey("TableName")
                        .HasName("PK_dbo.TableIdentity");

                    b.ToTable("TableIdentity");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.TaskJob", b =>
                {
                    b.Property<string>("TaskJobId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CalcPeriodType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDatetime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("OnDataLocked")
                        .HasColumnType("bit");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TargetTalbeKeyId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TriggerDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("TaskJobId");

                    b.ToTable("TaskJob");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.TaskSetting", b =>
                {
                    b.Property<string>("TaskSettingId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CalcPeriodSpan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<int>("CalcPeriodType")
                        .HasColumnType("int");

                    b.Property<string>("TaskRemarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<TimeSpan>("TaskRuningEndTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeSpan>("TaskRuningStartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("TaskStartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TimesOfTaskRunning")
                        .HasColumnType("int");

                    b.HasKey("TaskSettingId");

                    b.ToTable("TaskSetting");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.TransferObjectList", b =>
                {
                    b.Property<string>("TransferObjectListId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HolderId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("HolderName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("HolderRfId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("ObjectLogDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("ObjectName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ObjectRfId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("对应AccessCardId");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("StorageState")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransferObjectListId");

                    b.ToTable("TransferObjectList");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.UploadItem", b =>
                {
                    b.Property<string>("UploadItemId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileExt")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MainComId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RankOrder")
                        .HasColumnType("int");

                    b.Property<string>("RawName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubPath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TargetTalbeKeyId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UploadItemId");

                    b.ToTable("UploadItem");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.UserTrace", b =>
                {
                    b.Property<string>("UserTraceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("UserTraceID");

                    b.Property<string>("MainComId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OperatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OperatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TableKeyId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("TableKeyID");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UserTraceId");

                    b.ToTable("UserTrace");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetRoleClaims", b =>
                {
                    b.HasOne("DataBaseSetupV3.Model.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserClaims", b =>
                {
                    b.HasOne("DataBaseSetupV3.Model.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserLogins", b =>
                {
                    b.HasOne("DataBaseSetupV3.Model.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserRoles", b =>
                {
                    b.HasOne("DataBaseSetupV3.Model.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseSetupV3.Model.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUserTokens", b =>
                {
                    b.HasOne("DataBaseSetupV3.Model.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetRoles", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("AspNetUserRoles");
                });

            modelBuilder.Entity("DataBaseSetupV3.Model.AspNetUsers", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserRoles");

                    b.Navigation("AspNetUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
